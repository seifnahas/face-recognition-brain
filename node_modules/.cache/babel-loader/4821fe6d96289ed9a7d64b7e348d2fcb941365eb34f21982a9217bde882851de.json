{"ast":null,"code":"var _jsxFileName = \"/Users/seifnahas/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAT = '27f03ab8089845b99ab4701872a3d20f';\nconst USER_ID = 'aleptian';\nconst APP_ID = 'face-detection-app';\nconst MODEL_ID = 'face-detection';\n//const MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';    \n//const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    // componentDidMount(){\n    //   fetch('http://localhost:3000/')\n    //    .then(response => response.json())\n    //    .then(data => console.log(data)) \n    // }\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions).then(response => {\n        console.log(response);\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        }).then(response => response.json()).then(count => this.setState(Object.assign(this.state.user, {\n          entries: count\n        }))).catch(console.log);\n        return response.json();\n      }).then(result => {\n        console.log(result);\n        this.displayFaceBox(this.calculateFaceLocation(result));\n      }).catch(error => console.log('error', error));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = initialState;\n  }\n  render() {\n    // const {isSignedIn, box, imageUrl, route} = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"tadpole\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 12\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n// if(result){\n//   fetch('http://localhost:3000/image', {\n//     method: 'put', \n//     headers: {'Content-Type': 'application/json'}, \n//     body: JSON.stringify({\n//       id: this.state.user.id\n//     })\n//   })\n\n// .then(response => response.json())\n// .then(count => {\n//  this.setState({count})\n// })","map":{"version":3,"names":["React","Component","Navigation","Register","Logo","ImageLinkForm","Rank","Signin","FaceRecognition","ParticlesBg","jsxDEV","_jsxDEV","PAT","USER_ID","APP_ID","MODEL_ID","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","value","onButtonSubmit","state","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","count","Object","assign","catch","result","error","onRouteChange","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/seifnahas/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, {Component }from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg'\n\n\nconst PAT = '27f03ab8089845b99ab4701872a3d20f';\nconst USER_ID = 'aleptian';    \nconst APP_ID = 'face-detection-app';\nconst MODEL_ID = 'face-detection';\n//const MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';    \n//const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\nconst initialState = {\n\n    input : '', \n    imageUrl : '', \n    box: {}, \n    route: 'signin', \n    isSignedIn : false, \n    user: {\n      id: '', \n      name: '', \n      email: '', \n      entries: 0, \n      joined: '' \n    }\n  }\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState; \n  }\n\n  loadUser = (data) => {\n    this.setState({user: { \n      id: data.id, \n      name: data.name, \n      email: data.email, \n      entries: data.entries, \n      joined: data.joined\n    }})\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3000/')\n  //    .then(response => response.json())\n  //    .then(data => console.log(data)) \n  // }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box); \n    this.setState({box: box}); \n  }\n\n  onInputChange = (event) => {\n\n    this.setState({input: event.target.value})\n  }\n\n  \n  onButtonSubmit = () => {\n\n    this.setState({imageUrl: this.state.input});\n\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": this.state.input\n                  }\n              }\n          }\n      ]\n    });\n\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions)\n    .then(response => {\n      console.log(response);\n      fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      }).then(response => response.json()).then(count => this.setState(Object.assign(this.state.user, { entries: count})))\n        .catch(console.log)\n      return response.json()}) \n    .then(result => {\n      console.log(result);\n      this.displayFaceBox(this.calculateFaceLocation(result))})\n    .catch(error => console.log('error', error));\n  \n\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState);\n    } else if(route === 'home'){\n      this.setState({isSignedIn: true}); \n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    // const {isSignedIn, box, imageUrl, route} = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"tadpole\" bg={true} />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n\n        {this.state.route === 'home'\n         ? <div>\n              <Logo />\n\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/> \n           </div>\n         \n         \n         : (\n            this.state.route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n\n         ) \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n// if(result){\n//   fetch('http://localhost:3000/image', {\n//     method: 'put', \n//     headers: {'Content-Type': 'application/json'}, \n//     body: JSON.stringify({\n//       id: this.state.user.id\n//     })\n//   })\n\n// .then(response => response.json())\n// .then(count => {\n//  this.setState({count})\n// })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
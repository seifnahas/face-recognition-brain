{"ast":null,"code":"var _jsxFileName = \"/Users/seifnahas/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAT = '27f03ab8089845b99ab4701872a3d20f';\nconst USER_ID = 'aleptian';\nconst APP_ID = 'face-detection-app';\nconst MODEL_ID = 'face-detection';\n//const MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';    \n//const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    // componentDidMount(){\n    //   fetch('http://localhost:3000/')\n    //    .then(response => response.json())\n    //    .then(data => console.log(data)) \n    // }\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions).then(response => response.json()).then(data => {\n        this.displayFaceBox(this.calculateFaceLocation(data));\n        return data;\n      }).then(data => {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.user.id // Access user ID from state\n          })\n        }).then(response => response.json()).then(count => {\n          this.setState({\n            users: {\n              entries: count\n            }\n          });\n        }).catch(err => {\n          console.log('error in /image endpoint: ', err);\n        });\n      }).catch(err => {\n        console.log('Error in image API: ', err);\n      });\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    // const {isSignedIn, box, imageUrl, route} = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"tadpole\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 12\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n// if(result){\n//   fetch('http://localhost:3000/image', {\n//     method: 'put', \n//     headers: {'Content-Type': 'application/json'}, \n//     body: JSON.stringify({\n//       id: this.state.user.id\n//     })\n//   })\n\n// .then(response => response.json())\n// .then(count => {\n//  this.setState({count})\n// })","map":{"version":3,"names":["React","Component","Navigation","Register","Logo","ImageLinkForm","Rank","Signin","FaceRecognition","ParticlesBg","jsxDEV","_jsxDEV","PAT","USER_ID","APP_ID","MODEL_ID","App","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","count","users","catch","err","onRouteChange","route","isSignedIn","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/seifnahas/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, {Component }from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg'\n\n\nconst PAT = '27f03ab8089845b99ab4701872a3d20f';\nconst USER_ID = 'aleptian';    \nconst APP_ID = 'face-detection-app';\nconst MODEL_ID = 'face-detection';\n//const MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';    \n//const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input : '', \n      imageUrl : '', \n      box: {}, \n      route: 'signin', \n      isSignedIn : false, \n      user: {\n        id: '', \n        name: '', \n        email: '', \n        entries: 0, \n        joined: '' \n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: { \n      id: data.id, \n      name: data.name, \n      email: data.email, \n      entries: data.entries, \n      joined: data.joined\n    }})\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3000/')\n  //    .then(response => response.json())\n  //    .then(data => console.log(data)) \n  // }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box); \n    this.setState({box: box}); \n  }\n\n  onInputChange = (event) => {\n\n    this.setState({input: event.target.value})\n  }\n\n  \n  onButtonSubmit = () => {\n\n    this.setState({imageUrl: this.state.input});\n\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": this.state.input\n                  }\n              }\n          }\n      ]\n    });\n\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions)\n    .then((response) => response.json())\n    .then(data => {\n      this.displayFaceBox(this.calculateFaceLocation(data));\n      return data;\n    })\n    .then(data => {\n      fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          id: this.state.user.id  // Access user ID from state\n        })\n      })\n        .then(response => response.json())\n        .then(count => {\n          this.setState({users: {\n            entries: count \n          }})\n\n        })\n        .catch(err => {\n          console.log('error in /image endpoint: ', err);\n        });\n    })\n    .catch(err => {\n      console.log('Error in image API: ',err);\n    });\n\n  \n\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState({isSignedIn: false});\n    } else if(route === 'home'){\n      this.setState({isSignedIn: true}); \n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    // const {isSignedIn, box, imageUrl, route} = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"tadpole\" bg={true} />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n\n        {this.state.route === 'home'\n         ? <div>\n              <Logo />\n\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/> \n           </div>\n         \n         \n         : (\n            this.state.route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n\n         ) \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n// if(result){\n//   fetch('http://localhost:3000/image', {\n//     method: 'put', \n//     headers: {'Content-Type': 'application/json'}, \n//     body: JSON.stringify({\n//       id: this.state.user.id\n//     })\n//   })\n\n// .then(response => response.json())\n// .then(count => {\n//  this.setState({count})\n// })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
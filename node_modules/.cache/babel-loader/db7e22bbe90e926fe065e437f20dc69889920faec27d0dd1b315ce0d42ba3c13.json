{"ast":null,"code":"var _jsxFileName = \"/Users/seifnahas/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAT = '27f03ab8089845b99ab4701872a3d20f';\nconst USER_ID = 'aleptian';\nconst APP_ID = 'face-detection-app';\nconst MODEL_ID = 'face-detection';\n//const MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';    \nconst IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": USER_ID,\n    \"app_id\": APP_ID\n  },\n  \"inputs\": [{\n    \"data\": {\n      \"image\": {\n        \"url\": IMAGE_URL\n      }\n    }\n  }]\n});\nconst requestOptions = {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: ''\n    };\n  }\n  onInputChange(event) {\n    console.log(event.target.value);\n  }\n  onButtonSubmit() {\n    this.setState({\n      imageUrl: this.state.input\n    });\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"tadpole\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","jsxDEV","_jsxDEV","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","state","input","imageUrl","onInputChange","event","console","log","target","value","onButtonSubmit","setState","fetch","then","response","text","result","catch","error","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/seifnahas/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, {Component }from 'react';\n// import ReactDOM from 'react-dom';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg'\n\n\nconst PAT = '27f03ab8089845b99ab4701872a3d20f';\nconst USER_ID = 'aleptian';    \nconst APP_ID = 'face-detection-app';\nconst MODEL_ID = 'face-detection';\n//const MODEL_VERSION_ID = 'aa7f35c01e0642fda5cf400f543e7c40';    \nconst IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n  },\n  \"inputs\": [\n      {\n          \"data\": {\n              \"image\": {\n                  \"url\": IMAGE_URL\n              }\n          }\n      }\n  ]\n});\n\nconst requestOptions = {\n  method: 'POST',\n  headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n  },\n  body: raw\n};\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input : '', \n      imageUrl : ''\n    }\n  }\n\n  onInputChange(event) {\n    console.log(event.target.value); \n  }\n\n  onButtonSubmit() {\n\n    this.setState({imageUrl: this.state.input});\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/outputs\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error)); \n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"tadpole\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl}/> \n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}